(()=>{"use strict";var n={426:(n,t,e)=>{e.d(t,{Z:()=>s});var o=e(537),a=e.n(o),i=e(645),r=e.n(i)()(a());r.push([n.id,"*,\n*::after,\n*::before {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n\nbody {\n  background-color: rgb(206, 195, 180); \n  color: rgb(37, 34, 34);\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n  line-height: 1.6;\n}\n\nbutton,\ninput {\n  border: none;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  outline: none;\n}\n\nbutton {\n  width: 100%;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\ninput {\n  width: 100%;\n  padding: 10px;\n  border-radius: 5px;\n}\n\ni {\n  margin-right: 10px;\n}\n\n/* Header */\n\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px;\n  background-color: rgba(0, 0, 0, 0.781);\n  color: antiquewhite;\n}\n\n.applogo {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.open-nav-button {\n  display: none;\n  width: 40px;\n  padding: 0;\n  background-color: darkgray;\n  font-size: 40px;\n}\n\n.button-open-nav i {\n  margin-right: 0;\n}\n\n.applogo img{\n  padding: 10px;\n}\n\n.applogo h1{\n  color: antiquewhite;\n  font-size: 30px;\n}\n\n\n\n/* main */\n\n.main {\n  display: flex;\n  min-height: calc(100vh - 104px - 48px);\n}\n\n\n.nav {\n  width: 300px;\n  min-width: 250px;\n  padding: 20px;\n  background-color: white;\n}\n\n.nav.active {\n  display: block;\n}\n\n\n.default-project-button {\n  background-color:white;\n  text-align: left;\n}\n\n.projects-title {\n  padding: 10px;\n  margin-top: 30px;\n}\n\n.button-project {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: white;\n  text-align: left;\n  margin-bottom: 10px;\n}\n\n\n.add-project-button {\n  margin-top: 10px;\n  margin-left: 2px;\n  background-color: white;\n  text-align: left;\n}\n\n.add-project-button.active{\n  display: none;\n}\n\n\n.button-project.active,\n.default-project-button.active {\n  background-color:rgba(0, 0, 0, 0.795);\n  font-weight: bold;\n  color: whitesmoke;\n}\n\n.button-project:hover,\n.default-project-button:hover,\n.add-project-button:hover {\n  background-color: rgba(0, 0, 0, 0.795);\n  color: whitesmoke;\n}\n\n.right-project-panel {\n  visibility: hidden;\n}\n\n.button-project:hover .right-project-panel {\n  visibility: visible;\n}\n\n.fa-times {\n  margin-right: 0;\n}\n\n.add-project-bar {\n  display: none;\n  width: 100%;\n  padding: 10px;\n  text-align: center;\n}\n\n.add-project-bar.active {\n  display: block;\n}\n\n.input-add-project-bar {\n  border: 1px solid #aaa;\n  margin-bottom: 10px;\n}\n\n.add-project-bar-buttons {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 20px;\n}\n\n.button-add-project-bar {\n  border: 1px solid #99dd99;\n  background-color: #aaffaa;\n  font-weight: bold;\n}\n\n.button-cancel-project-bar {\n  border: 1px solid #eeadad;\n  background-color: #ffbebe;\n  font-weight: bold;\n}\n\n\n.button-add-project-bar:hover {\n  background-color: #a6f0a6;\n}\n\n.button-cancel-project-bar:hover {\n  background-color: #f5b2b2;\n}\n\n.project-board {\n  width: 900px;\n  padding: 20px;\n  margin: 0 auto;\n}\n\n.project-board h1 {\n  padding: 0 10px;\n  margin-bottom: 10px;\n  font-size: 30px;\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n}\n\n.button-add-task {\n  width: 50%;\n  background-color: inherit;\n  text-align: left;\n}\n\n.add-task-popup {\n  display: none;\n}\n\n.add-task-popup.active {\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\nlabel{\n  margin-bottom: 5px;\n  margin-top: 5px;\n}\n\n\n\n.priority{\n  width: 100%;\n  height: auto;\n  font-size: 15px;\n}\n\ntextarea {\n  width: 100%;\n  margin-bottom: 10px;\n  font-family: 'Courier New', Courier, monospace;\n}\n\n\n.add-task-popup-buttons {\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  gap: 20px;\n}\n\n\n.button-add-task-popup {\n  background-color: #66e766;\n  font-weight: bold;\n}\n\n.button-cancel-task-popup {\n  background-color: #e45050;\n  font-weight: bold;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;;EAGE,sBAAsB;EACtB,UAAU;EACV,SAAS;AACX;;AAEA;EACE,oCAAoC;EACpC,sBAAsB;EACtB,qGAAqG;EACrG,gBAAgB;AAClB;;AAEA;;EAEE,YAAY;EACZ,cAAc;EACd,oBAAoB;EACpB,kBAAkB;EAClB,aAAa;AACf;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA,WAAW;;AAEX;EACE,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,aAAa;EACb,sCAAsC;EACtC,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,WAAW;EACX,UAAU;EACV,0BAA0B;EAC1B,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,mBAAmB;EACnB,eAAe;AACjB;;;;AAIA,SAAS;;AAET;EACE,aAAa;EACb,sCAAsC;AACxC;;;AAGA;EACE,YAAY;EACZ,gBAAgB;EAChB,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,cAAc;AAChB;;;AAGA;EACE,sBAAsB;EACtB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,uBAAuB;EACvB,gBAAgB;EAChB,mBAAmB;AACrB;;;AAGA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,uBAAuB;EACvB,gBAAgB;AAClB;;AAEA;EACE,aAAa;AACf;;;AAGA;;EAEE,qCAAqC;EACrC,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;;;EAGE,sCAAsC;EACtC,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,WAAW;EACX,aAAa;EACb,kBAAkB;AACpB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,SAAS;AACX;;AAEA;EACE,yBAAyB;EACzB,yBAAyB;EACzB,iBAAiB;AACnB;;AAEA;EACE,yBAAyB;EACzB,yBAAyB;EACzB,iBAAiB;AACnB;;;AAGA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,cAAc;AAChB;;AAEA;EACE,eAAe;EACf,mBAAmB;EACnB,eAAe;EACf,qGAAqG;AACvG;;AAEA;EACE,UAAU;EACV,yBAAyB;EACzB,gBAAgB;AAClB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,sBAAsB;EACtB,8BAA8B;AAChC;;AAEA;EACE,kBAAkB;EAClB,eAAe;AACjB;;;;AAIA;EACE,WAAW;EACX,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,mBAAmB;EACnB,8CAA8C;AAChD;;;AAGA;EACE,aAAa;EACb,mBAAmB;EACnB,6BAA6B;EAC7B,SAAS;AACX;;;AAGA;EACE,yBAAyB;EACzB,iBAAiB;AACnB;;AAEA;EACE,yBAAyB;EACzB,iBAAiB;AACnB",sourcesContent:["*,\n*::after,\n*::before {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n\nbody {\n  background-color: rgb(206, 195, 180); \n  color: rgb(37, 34, 34);\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n  line-height: 1.6;\n}\n\nbutton,\ninput {\n  border: none;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  outline: none;\n}\n\nbutton {\n  width: 100%;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\ninput {\n  width: 100%;\n  padding: 10px;\n  border-radius: 5px;\n}\n\ni {\n  margin-right: 10px;\n}\n\n/* Header */\n\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px;\n  background-color: rgba(0, 0, 0, 0.781);\n  color: antiquewhite;\n}\n\n.applogo {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.open-nav-button {\n  display: none;\n  width: 40px;\n  padding: 0;\n  background-color: darkgray;\n  font-size: 40px;\n}\n\n.button-open-nav i {\n  margin-right: 0;\n}\n\n.applogo img{\n  padding: 10px;\n}\n\n.applogo h1{\n  color: antiquewhite;\n  font-size: 30px;\n}\n\n\n\n/* main */\n\n.main {\n  display: flex;\n  min-height: calc(100vh - 104px - 48px);\n}\n\n\n.nav {\n  width: 300px;\n  min-width: 250px;\n  padding: 20px;\n  background-color: white;\n}\n\n.nav.active {\n  display: block;\n}\n\n\n.default-project-button {\n  background-color:white;\n  text-align: left;\n}\n\n.projects-title {\n  padding: 10px;\n  margin-top: 30px;\n}\n\n.button-project {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: white;\n  text-align: left;\n  margin-bottom: 10px;\n}\n\n\n.add-project-button {\n  margin-top: 10px;\n  margin-left: 2px;\n  background-color: white;\n  text-align: left;\n}\n\n.add-project-button.active{\n  display: none;\n}\n\n\n.button-project.active,\n.default-project-button.active {\n  background-color:rgba(0, 0, 0, 0.795);\n  font-weight: bold;\n  color: whitesmoke;\n}\n\n.button-project:hover,\n.default-project-button:hover,\n.add-project-button:hover {\n  background-color: rgba(0, 0, 0, 0.795);\n  color: whitesmoke;\n}\n\n.right-project-panel {\n  visibility: hidden;\n}\n\n.button-project:hover .right-project-panel {\n  visibility: visible;\n}\n\n.fa-times {\n  margin-right: 0;\n}\n\n.add-project-bar {\n  display: none;\n  width: 100%;\n  padding: 10px;\n  text-align: center;\n}\n\n.add-project-bar.active {\n  display: block;\n}\n\n.input-add-project-bar {\n  border: 1px solid #aaa;\n  margin-bottom: 10px;\n}\n\n.add-project-bar-buttons {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 20px;\n}\n\n.button-add-project-bar {\n  border: 1px solid #99dd99;\n  background-color: #aaffaa;\n  font-weight: bold;\n}\n\n.button-cancel-project-bar {\n  border: 1px solid #eeadad;\n  background-color: #ffbebe;\n  font-weight: bold;\n}\n\n\n.button-add-project-bar:hover {\n  background-color: #a6f0a6;\n}\n\n.button-cancel-project-bar:hover {\n  background-color: #f5b2b2;\n}\n\n.project-board {\n  width: 900px;\n  padding: 20px;\n  margin: 0 auto;\n}\n\n.project-board h1 {\n  padding: 0 10px;\n  margin-bottom: 10px;\n  font-size: 30px;\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\n}\n\n.button-add-task {\n  width: 50%;\n  background-color: inherit;\n  text-align: left;\n}\n\n.add-task-popup {\n  display: none;\n}\n\n.add-task-popup.active {\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\nlabel{\n  margin-bottom: 5px;\n  margin-top: 5px;\n}\n\n\n\n.priority{\n  width: 100%;\n  height: auto;\n  font-size: 15px;\n}\n\ntextarea {\n  width: 100%;\n  margin-bottom: 10px;\n  font-family: 'Courier New', Courier, monospace;\n}\n\n\n.add-task-popup-buttons {\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  gap: 20px;\n}\n\n\n.button-add-task-popup {\n  background-color: #66e766;\n  font-weight: bold;\n}\n\n.button-cancel-task-popup {\n  background-color: #e45050;\n  font-weight: bold;\n}"],sourceRoot:""}]);const s=r},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(r[c]=!0)}for(var d=0;d<n.length;d++){var A=[].concat(n[d]);o&&r[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),e&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=e):A[2]=e),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),t.push(A))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(a," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var i={},r=[],s=0;s<n.length;s++){var c=n[s],d=o.base?c[0]+o.base:c[0],A=i[d]||0,p="".concat(d," ").concat(A);i[d]=A+1;var l=e(p),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==l)t[l].references++,t[l].updater(u);else{var b=a(u,o);o.byIndex=s,t.splice(s,0,{identifier:p,updater:b,references:1})}r.push(p)}return r}function a(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,a){var i=o(n=n||[],a=a||{});return function(n){n=n||[];for(var r=0;r<i.length;r++){var s=e(i[r]);t[s].references--}for(var c=o(n,a),d=0;d<i.length;d++){var A=e(i[d]);0===t[A].references&&(t[A].updater(),t.splice(A,1))}i=c}}},569:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var a=void 0!==e.layer;a&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,a&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(o){var a=t[o];if(void 0!==a)return a.exports;var i=t[o]={id:o,exports:{}};return n[o](i,i.exports,e),i.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.nc=void 0,(()=>{var n=e(379),t=e.n(n),o=e(795),a=e.n(o),i=e(569),r=e.n(i),s=e(565),c=e.n(s),d=e(216),A=e.n(d),p=e(589),l=e.n(p),u=e(426),b={};b.styleTagTransform=l(),b.setAttributes=c(),b.insert=r().bind(null,"head"),b.domAPI=a(),b.insertStyleElement=A(),t()(u.Z,b),u.Z&&u.Z.locals&&u.Z.locals;class g{constructor(n){this.name=n,this.tasks=[]}setName(n){this.name=n}getName(){return this.name}setTasks(n){this.tasks=n}getTasks(){return this.tasks}getTask(n){return this.tasks.find((t=>t.getName()===n))}contains(n){return this.tasks.some((t=>t.getName()===n))}addTask(n){this.tasks.find((t=>t.getName()===n.name))||this.tasks.push(n)}deleteTask(n){this.tasks=this.tasks.filter((t=>t.name!==n))}}class m{constructor(n,t="No date",e,o){this.name=n,this.dueDate=t,this.priority=e,this.description=o}setName(n){this.name=n}getName(){return this.name}setDate(n){this.dueDate=n}getDate(){return this.dueDate}setPriority(n){this.priority=n}getPriority(){return this.priority}setDescription(n){this.description=n}getDescription(){return this.description}}class E{constructor(){this.projects=[],this.projects.push(new g("Inbox")),this.projects.push(new g("Today")),this.projects.push(new g("This week"))}setProjects(n){this.projects=n}getProjects(){return this.projects}getProject(n){return this.projects.find((t=>t.getName()===n))}contains(n){return this.projects.some((t=>t.getName()===n))}addProject(n){this.projects.find((t=>t.name===n.name))||this.projects.push(n)}deleteProject(n){const t=this.projects.find((t=>t.getName()===n));this.projects.splice(this.projects.indexOf(t),1)}}class B{static saveTodoList(n){localStorage.setItem("todoList",JSON.stringify(n))}static getTodoList(){const n=Object.assign(new E,JSON.parse(localStorage.getItem("todoList")));return n.setProjects(n.getProjects().map((n=>Object.assign(new g,n)))),n.getProjects().forEach((n=>n.setTasks(n.getTasks().map((n=>Object.assign(new m,n)))))),n}static addProject(n){const t=B.getTodoList();t.addProject(n),B.saveTodoList(t)}static deleteProject(n){const t=B.getTodoList();t.deleteProject(n),B.saveTodoList(t)}static addTask(n,t){const e=B.getTodoList();e.getProject(n).addTask(t),B.saveTodoList(e)}}class f{static loadHomepage(){f.loadProjects(),f.initProjectButtons()}static loadProjects(){B.getTodoList().getProjects().forEach((n=>{"Inbox"!==n.name&&"Today"!==n.name&&"This week"!==n.name&&f.createProject(n.name)})),f.initAddProjectButtons()}static loadProjectContent(n){const t=document.getElementById("project-board");t.innerHTML=`\n        <h1 id="project-name">${n}</h1>\n        <div class="tasks-list" id="tasks-list"></div>`,"Today"!==n&&"This week"!==n&&(t.innerHTML+='\n        <button class="button-add-task" id="button-add-task">\n          <i class="fas fa-plus"></i>\n          Add Task\n        </button>\n\n        <div class="add-task-popup" id="add-task-popup">\n          <label for= "task-name">Task Name:</label>\n          <input class="input-add-task-popup" id="input-add-task-popup" type="text" placeholder= "Task Name"/>\n\n          <label for="date">Due date:</label>\n          <input type= "date" id= "due-date" name= "due-date"/>\n\n          <label for= "priority">Priority:</label>\n          \n          <select class="priority" name="priority" id= "priority" >\n            <option class= "low" value="low">Low</option>\n            <option class= "medium" value="medium">Medium</option>\n            <option class= "high" value="high">High</option>\n          </select>\n          \n\n          <label for= "description">Description:</label>\n        \n          <textarea name="description" id="description" cols="30" rows="6"></textarea>\n        \n          <div class="add-task-popup-buttons">\n            <button class="button-add-task-popup" id="button-add-task-popup">Add</button>\n            <button class="button-cancel-task-popup" id="button-cancel-task-popup">Cancel</button>\n          </div>\n        </div>'),f.initAddTaskButtons()}static createProject(n){document.getElementById("projects-list").innerHTML+=` \n      <button class="button-project" data-project-button>\n        <div class="left-project-panel">\n          <i class="fas fa-tasks"></i>\n          <span>${n}</span>\n        </div>\n        <div class="right-project-panel">\n          <i class="fas fa-times"></i>\n        </div>\n      </button>`,f.initProjectButtons()}static createTask(n,t,e,o){document.getElementById("tasks-list").innerHTML+=`\n      <button class="button-task" data-task-button>\n        <div class="left-task-panel">\n          <i class="far fa-circle"></i>\n          <p class="task-content">${n}</p>\n          <p class="task-level">${e}</p>\n          <input type="text" class="input-task-name" data-input-task-name>\n        </div>\n        <div class="right-task-panel">\n          <p class="due-date" id="due-date">${t}</p>\n          <input type="date" class="input-due-date" data-input-due-date>\n          <i class="fas fa-times"></i>\n        </div>\n      </button>\n      <div class="description">${o}</div>`}static clearProjects(){document.getElementById("projects-list").textContent=""}static clearProjectBoard(){document.querySelector(".project-board").innerHTML=""}static initAddProjectButtons(){const n=document.getElementById("add-project-button"),t=document.getElementById("button-add-project-bar"),e=document.getElementById("button-cancel-project-bar"),o=document.getElementById("input-add-project-bar");n.addEventListener("click",f.openAddProjectPopup),t.addEventListener("click",f.addProject),e.addEventListener("click",f.closeAddProjectPopup),o.addEventListener("keypress",f.handleAddProjectPopupInput)}static openAddProjectPopup(){const n=document.getElementById("add-project-bar"),t=document.getElementById("add-project-button");n.classList.add("active"),t.classList.add("active"),f.clearProjectBoard()}static closeAddProjectPopup(){const n=document.getElementById("add-project-bar"),t=document.getElementById("add-project-button"),e=document.getElementById("input-add-project-bar");n.classList.remove("active"),t.classList.remove("active"),e.value=""}static addProject(){const n=document.getElementById("input-add-project-bar"),t=n.value;if(""!==t){if(B.getTodoList().contains(t))return n.value="",void alert("Project names must be different");B.addProject(new g(t)),f.createProject(t),f.closeAddProjectPopup()}else alert("Project name can't be empty")}static handleAddProjectPopupInput(n){"Enter"===n.key&&f.addProject()}static initProjectButtons(){document.querySelectorAll(".button-project").forEach((n=>n.addEventListener("click",f.handleProjectButton)))}static deleteProject(n){B.deleteProject(n),f.clearProjects(),f.loadProjects()}static handleProjectButton(n){const t=this.children[0].children[1].textContent;if(this.classList.contains("active")&&f.clearProjectBoard(),n.target.classList.contains("fa-times"))return f.deleteProject(t),void f.clearProjectBoard();f.openProject(t,this)}static openProject(n,t){[...document.querySelectorAll(".default-project-button"),...document.querySelectorAll(".button-project")].forEach((n=>n.classList.remove("active"))),t.classList.add("active"),f.closeAddProjectPopup(),f.loadProjectContent(n)}static initAddTaskButtons(){const n=document.getElementById("button-add-task"),t=document.getElementById("button-add-task-popup"),e=document.getElementById("button-cancel-task-popup");n.addEventListener("click",f.openAddTaskPopup),t.addEventListener("click",f.addTask),e.addEventListener("click",f.closeAddTaskPopup)}static openAddTaskPopup(){const n=document.querySelector(".add-task-popup");document.querySelector(".button-add-task"),n.classList.add("active")}static closeAddTaskPopup(){const n=document.getElementById("add-task-popup");document.getElementById("button-add-task"),n.classList.remove("active")}static addTask(){const n=document.getElementById("project-name").textContent,t=document.getElementById("input-add-task-popup").value,e=document.getElementById("due-date").value,o=document.getElementById("priority").value,a=document.getElementById("description").value;if(console.log(t),console.log(e),console.log(o),console.log(a),""!==t){if(B.getTodoList().getProject(n).contains(t))return alert("Task names must be different"),void(t.value="");B.addTask(n,new m(t,e,o,a)),f.createTask(t,e,o,a),f.closeAddTaskPopup()}else alert("Task name can't be empty")}}document.addEventListener("DOMContentLoaded",f.loadHomepage)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,